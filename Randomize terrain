package experimental;

import java.awt.*;

public class RandomizeLevels extends java.applet.Applet
{
	//General setup
	int width = 640, height = 640;
	Font fnt10P = new Font("Helvetica", Font.PLAIN, 10);
	Label[][] terrain = new Label[64][64];
	
	//Which rooms show up
	int roomQuantity = 5; //Right now this can be set by the programmer to either 2, 3, 4, or 5
	int roomA = (int)(9 * Math.random() + 1);
	int roomB = (int)(9 * Math.random() + 1);
	int roomC = (int)(9 * Math.random() + 1);
	int roomD = (int)(9 * Math.random() + 1);
	int roomE = (int)(9 * Math.random() + 1);
	
	//Room 1 variables
	int room1Width = (int)(17 * Math.random() + 5);
	int room1Height = (int)(17 * Math.random() + 5);
	int room1CornerX = (int)((21 - room1Width) * Math.random() + 1);
	int room1CornerY = (int)((21 - room1Height) * Math.random() + 1);
	
	//Room 2 variables
	int room2Width = (int)(17 * Math.random() + 5);
	int room2Height = (int)(17 * Math.random() + 5);
	int room2CornerX = (int)((21 - room2Width) * Math.random() + 22);
	int room2CornerY = (int)((21 - room2Height) * Math.random() + 1);
	
	//Room 3 variables
	int room3Width = (int)(17 * Math.random() + 5);
	int room3Height = (int)(17 * Math.random() + 5);
	int room3CornerX = (int)((21 - room3Width) * Math.random() + 43);
	int room3CornerY = (int)((21 - room3Height) * Math.random() + 1);
	
	//Room 4 variables
	int room4Width = (int)(17 * Math.random() + 5);
	int room4Height = (int)(17 * Math.random() + 5);
	int room4CornerX = (int)((21 - room4Width) * Math.random() + 1);
	int room4CornerY = (int)((21 - room4Height) * Math.random() + 22);
	
	//Room 5 variables
	int room5Width = (int)(17 * Math.random() + 5);
	int room5Height = (int)(17 * Math.random() + 5);
	int room5CornerX = (int)((21 - room5Width) * Math.random() + 22);
	int room5CornerY = (int)((21 - room5Height) * Math.random() + 22);
	
	//Room 6 variables
	int room6Width = (int)(17 * Math.random() + 5);
	int room6Height = (int)(17 * Math.random() + 5);
	int room6CornerX = (int)((21 - room6Width) * Math.random() + 43);
	int room6CornerY = (int)((21 - room6Height) * Math.random() + 22);
	
	//Room 7 variables
	int room7Width = (int)(17 * Math.random() + 5);
	int room7Height = (int)(17 * Math.random() + 5);
	int room7CornerX = (int)((21 - room7Width) * Math.random() + 1);
	int room7CornerY = (int)((21 - room7Height) * Math.random() + 43);
	
	//Room 8 variables
	int room8Width = (int)(17 * Math.random() + 5);
	int room8Height = (int)(17 * Math.random() + 5);
	int room8CornerX = (int)((21 - room8Width) * Math.random() + 22);
	int room8CornerY = (int)((21 - room8Height) * Math.random() + 43);
	
	//Room 9 variables
	int room9Width = (int)(17 * Math.random() + 5);
	int room9Height = (int)(17 * Math.random() + 5);
	int room9CornerX = (int)((21 - room9Width) * Math.random() + 43);
	int room9CornerY = (int)((21 - room9Height) * Math.random() + 43);
	
	public void init()
	{
		//General setup
		setSize(width, height);
		setLayout(null);
		setBackground(Color.black);
		
		//Tile setup
		for (int x = 0; x < 64; x++)
		{
			for (int y = 0; y < 64; y++)
			{
				terrain[x][y] = new Label("*");
				terrain[x][y].setSize(10, 10);
				terrain[x][y].setLocation(10 * x, 10 * y);
				terrain[x][y].setFont(fnt10P);
				terrain[x][y].setForeground(Color.white);
				terrain[x][y].setVisible(true);
			}
		}
		
		//Ascertain selected rooms are all different
		while (roomB == roomA) roomB = (int)(9 * Math.random() + 1);
		while (roomC == roomA || roomC == roomB) roomC = (int)(9 * Math.random() + 1);
		while (roomD == roomA || roomD == roomB || roomD == roomC) roomD = (int)(9 * Math.random() + 1);
		while (roomE == roomA || roomE == roomB || roomE == roomC || roomE == roomD) roomB = (int)(9 * Math.random() + 1);

		//If 2 rooms are to show up
		if (roomQuantity == 2)
		{
			if (roomA == 1 || roomB == 1) this.edges(room1CornerX, room1CornerY, room1Width, room1Height);
			if (roomA == 2 || roomB == 2) this.edges(room2CornerX, room2CornerY, room2Width, room2Height);
			if (roomA == 3 || roomB == 3) this.edges(room3CornerX, room3CornerY, room3Width, room3Height);
			if (roomA == 4 || roomB == 4) this.edges(room4CornerX, room4CornerY, room4Width, room4Height);
			if (roomA == 5 || roomB == 5) this.edges(room5CornerX, room5CornerY, room5Width, room5Height);
			if (roomA == 6 || roomB == 6) this.edges(room6CornerX, room6CornerY, room6Width, room6Height);
			if (roomA == 7 || roomB == 7) this.edges(room7CornerX, room7CornerY, room7Width, room7Height);
			if (roomA == 8 || roomB == 8) this.edges(room8CornerX, room8CornerY, room8Width, room8Height);
			if (roomA == 9 || roomB == 9) this.edges(room9CornerX, room9CornerY, room9Width, room9Height);
		}
		
		//If 3 rooms are to show up
		else if (roomQuantity == 3)
		{
			if (roomA == 1 || roomB == 1 || roomC == 1) this.edges(room1CornerX, room1CornerY, room1Width, room1Height);
			if (roomA == 2 || roomB == 2 || roomC == 2) this.edges(room2CornerX, room2CornerY, room2Width, room2Height);
			if (roomA == 3 || roomB == 3 || roomC == 3) this.edges(room3CornerX, room3CornerY, room3Width, room3Height);
			if (roomA == 4 || roomB == 4 || roomC == 4) this.edges(room4CornerX, room4CornerY, room4Width, room4Height);
			if (roomA == 5 || roomB == 5 || roomC == 5) this.edges(room5CornerX, room5CornerY, room5Width, room5Height);
			if (roomA == 6 || roomB == 6 || roomC == 6) this.edges(room6CornerX, room6CornerY, room6Width, room6Height);
			if (roomA == 7 || roomB == 7 || roomC == 7) this.edges(room7CornerX, room7CornerY, room7Width, room7Height);
			if (roomA == 8 || roomB == 8 || roomC == 8) this.edges(room8CornerX, room8CornerY, room8Width, room8Height);
			if (roomA == 9 || roomB == 9 || roomC == 9) this.edges(room9CornerX, room9CornerY, room9Width, room9Height);
		}
		
		//If 4 rooms are to show up
		else if (roomQuantity == 4)
		{
			if (roomA == 1 || roomB == 1 || roomC == 1 || roomD == 1) this.edges(room1CornerX, room1CornerY, room1Width, room1Height);
			if (roomA == 2 || roomB == 2 || roomC == 2 || roomD == 2) this.edges(room2CornerX, room2CornerY, room2Width, room2Height);
			if (roomA == 3 || roomB == 3 || roomC == 3 || roomD == 3) this.edges(room3CornerX, room3CornerY, room3Width, room3Height);
			if (roomA == 4 || roomB == 4 || roomC == 4 || roomD == 4) this.edges(room4CornerX, room4CornerY, room4Width, room4Height);
			if (roomA == 5 || roomB == 5 || roomC == 5 || roomD == 5) this.edges(room5CornerX, room5CornerY, room5Width, room5Height);
			if (roomA == 6 || roomB == 6 || roomC == 6 || roomD == 6) this.edges(room6CornerX, room6CornerY, room6Width, room6Height);
			if (roomA == 7 || roomB == 7 || roomC == 7 || roomD == 7) this.edges(room7CornerX, room7CornerY, room7Width, room7Height);
			if (roomA == 8 || roomB == 8 || roomC == 8 || roomD == 8) this.edges(room8CornerX, room8CornerY, room8Width, room8Height);
			if (roomA == 9 || roomB == 9 || roomC == 9 || roomD == 9) this.edges(room9CornerX, room9CornerY, room9Width, room9Height);
		}
		
		//If 5 rooms are to show up
		else
		{
			if (roomA == 1 || roomB == 1 || roomC == 1 || roomD == 1 || roomE == 1) this.edges(room1CornerX, room1CornerY, room1Width, room1Height);
			if (roomA == 2 || roomB == 2 || roomC == 2 || roomD == 2 || roomE == 2) this.edges(room2CornerX, room2CornerY, room2Width, room2Height);
			if (roomA == 3 || roomB == 3 || roomC == 3 || roomD == 3 || roomE == 3) this.edges(room3CornerX, room3CornerY, room3Width, room3Height);
			if (roomA == 4 || roomB == 4 || roomC == 4 || roomD == 4 || roomE == 4) this.edges(room4CornerX, room4CornerY, room4Width, room4Height);
			if (roomA == 5 || roomB == 5 || roomC == 5 || roomD == 5 || roomE == 5) this.edges(room5CornerX, room5CornerY, room5Width, room5Height);
			if (roomA == 6 || roomB == 6 || roomC == 6 || roomD == 6 || roomE == 6) this.edges(room6CornerX, room6CornerY, room6Width, room6Height);
			if (roomA == 7 || roomB == 7 || roomC == 7 || roomD == 7 || roomE == 7) this.edges(room7CornerX, room7CornerY, room7Width, room7Height);
			if (roomA == 8 || roomB == 8 || roomC == 8 || roomD == 8 || roomE == 8) this.edges(room8CornerX, room8CornerY, room8Width, room8Height);
			if (roomA == 9 || roomB == 9 || roomC == 9 || roomD == 9 || roomE == 9) this.edges(room9CornerX, room9CornerY, room9Width, room9Height);
		}
	}
	
	public void paint(Graphics g)
	{
		
	}
	
	public void edges(int someCornerX, int someCornerY, int someWidth, int someHeight)
	{
		for (int i = 0; i < someWidth; i++)
		{
			for (int j = 0; j < someHeight; j++)
			{
				add(terrain[someCornerX + i][someCornerY + j]);
				terrain[someCornerX + i][someCornerY].setText("X");
				terrain[someCornerX + i][someCornerY + someHeight - 1].setText("X");
				terrain[someCornerX][someCornerY + j].setText("X");
				terrain[someCornerX + someWidth - 1][someCornerY + j].setText("X");
			}
		}
	}
}
